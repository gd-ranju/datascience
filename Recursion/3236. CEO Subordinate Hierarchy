Write a solution to find subordinates of the CEO (both direct and indirect), along with their level in the hierarchy and their salary difference from the CEO.

The result should have the following columns:

The query result format is in the following example.

subordinate_id: The employee_id of the subordinate
subordinate_name: The name of the subordinate
hierarchy_level: The level of the subordinate in the hierarchy (1 for direct reports, 2 for their direct reports, and so on)
salary_difference: The difference between the subordinate's salary and the CEO's salary
Return the result table ordered by hierarchy_level ascending, and then by subordinate_id ascending.



WITH RECURSIVE
    -- CTE to generate employee hierarchy levels
    EmployeeHierarchy AS (
        -- Base case: Start with the top-level managers (those with no manager)
        SELECT
            employee_id,
            employee_name,
            0 AS hierarchy_level,   -- Top-level managers have a hierarchy level of 0
            manager_id,
            salary
        FROM Employees
        WHERE manager_id IS NULL
        
        UNION ALL
        
        -- Recursive case: For each manager, find their subordinates (employees who report to them)
        SELECT
            e.employee_id,
            e.employee_name,
            hierarchy_level + 1 AS hierarchy_level,  -- Subordinates have a hierarchy level 1 higher than their manager
            e.manager_id,
            e.salary
        FROM
            EmployeeHierarchy t  -- Referencing the CTE itself (recursive part)
            JOIN Employees e ON t.employee_id = e.manager_id  -- Join employees with their managers
    ),
    
    -- CTE to get the salary of the top-level manager(s) (employees who have no manager)
    TopManagerSalary AS (
        SELECT salary
        FROM Employees
        WHERE manager_id IS NULL  -- Top-level managers have no manager (manager_id is NULL)
    )

-- Final SELECT statement to retrieve the data
SELECT
    employee_id AS subordinate_id,  -- The employee (subordinate) ID
    employee_name AS subordinate_name,  -- The employee (subordinate) name
    hierarchy_level,  -- The hierarchy level in the organization (0 for top-level managers, higher for subordinates)
    t.salary - p.salary AS salary_difference  -- The salary difference between the subordinate and the top-level manager(s)
FROM
    EmployeeHierarchy t  -- Referencing the EmployeeHierarchy CTE for employee data
    JOIN TopManagerSalary p  -- Referencing the TopManagerSalary CTE to get the salary of the top-level managers
WHERE
    hierarchy_level != 0  -- Exclude the top-level managers (we are only interested in subordinates)
ORDER BY 
    hierarchy_level,  -- Order the results by hierarchy level
    subordinate_id;  -- Then, order by the subordinate's employee ID
