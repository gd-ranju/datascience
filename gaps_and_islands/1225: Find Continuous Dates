A system is running one task every day. Every task is independent of the previous tasks. The tasks can fail or succeed.

Write a solution to report the period_state for each continuous interval of days in the period from 2019-01-01 to 2019-12-31.

period_state is 'failed' if tasks in this interval failed or 'succeeded' if tasks in this interval succeeded. Interval of days are retrieved as start_date and end_date.

Return the result table ordered by start_date.



-- Common Table Expression (CTE) to combine data from 'Failed' and 'Succeeded' tables
WITH cte AS (
    -- Selecting fail_date as 'date' from Failed table and labeling it as 'failed'
    SELECT fail_date AS date, 'failed' AS state FROM Failed
    UNION
    -- Selecting success_date as 'date' from Succeeded table and labeling it as 'success'
    SELECT success_date AS date, 'success' AS state FROM Succeeded
),

-- Second CTE to add a row number for each state (fail or success) ordered by date
cte2 AS (
    SELECT *, ROW_NUMBER() OVER (PARTITION BY state ORDER BY date) AS rnk
    FROM cte
),

-- Third CTE to calculate a grouping (grp) based on the date and row number
cte3 AS (
    SELECT *, DATE_SUB(date, INTERVAL rnk DAY) AS grp
    FROM cte2
)

-- Final SELECT query to group by 'state' and find continuous periods for both 'failed' and 'success'
SELECT 
    state AS period_state,         -- Period state: 'failed' or 'success'
    MIN(date) AS start_date,       -- Start date of the period
    MAX(date) AS end_date          -- End date of the period
FROM cte3
WHERE date BETWEEN '2019-01-01' AND '2019-12-31'  -- Filter for the year 2019
GROUP BY grp, state;            -- Grouping by the 'grp' and 'state' to find continuous dates
