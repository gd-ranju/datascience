Table: Salary

+-------------+------+
| Column Name | Type |
+-------------+------+
| id          | int  |
| employee_id | int  |
| amount      | int  |
| pay_date    | date |
+-------------+------+
In SQL, id is the primary key column for this table.
Each row of this table indicates the salary of an employee in one month.
employee_id is a foreign key (reference column) from the Employee table.
 

Table: Employee

+---------------+------+
| Column Name   | Type |
+---------------+------+
| employee_id   | int  |
| department_id | int  |
+---------------+------+
In SQL, employee_id is the primary key column for this table.
Each row of this table indicates the department of an employee.
 

Find the comparison result (higher/lower/same) of the average salary of employees in a department to the company's average salary.

Return the result table in any order.





-- Common Table Expression (CTE) to calculate company and department average salaries by pay month
WITH
    SalaryComparison AS (
        SELECT
            DATE_FORMAT(pay_date, '%Y-%m') AS pay_month,  -- Format pay date as 'YYYY-MM'
            department_id,
            AVG(amount) OVER (PARTITION BY pay_date) AS company_avg_amount,  -- Company-wide average for each pay date
            AVG(amount) OVER (PARTITION BY pay_date, department_id) AS department_avg_amount  -- Department-specific average for each pay date
        FROM
            Salary AS s
            JOIN Employee AS e ON s.employee_id = e.employee_id  -- Join Salary table with Employee table to get employee details
    )
-- Final selection to compare company and department average amounts
SELECT DISTINCT
    pay_month,
    department_id,
    CASE
        WHEN company_avg_amount = department_avg_amount THEN 'same'  -- If the averages are equal
        WHEN company_avg_amount < department_avg_amount THEN 'higher'  -- If company average is lower
        ELSE 'lower'  -- If company average is higher
    END AS comparison
FROM SalaryComparison;
