Input: 
Spending table:
+---------+------------+----------+--------+
| user_id | spend_date | platform | amount |
+---------+------------+----------+--------+
| 1       | 2019-07-01 | mobile   | 100    |
| 1       | 2019-07-01 | desktop  | 100    |
| 2       | 2019-07-01 | mobile   | 100    |
| 2       | 2019-07-02 | mobile   | 100    |
| 3       | 2019-07-01 | desktop  | 100    |
| 3       | 2019-07-02 | desktop  | 100    |
+---------+------------+----------+--------+
Output: 
+------------+----------+--------------+-------------+
| spend_date | platform | total_amount | total_users |
+------------+----------+--------------+-------------+
| 2019-07-01 | desktop  | 100          | 1           |
| 2019-07-01 | mobile   | 100          | 1           |
| 2019-07-01 | both     | 200          | 1           |
| 2019-07-02 | desktop  | 100          | 1           |
| 2019-07-02 | mobile   | 100          | 1           |
| 2019-07-02 | both     | 0            | 0           |
+------------+----------+--------------+-------------+ 
Explanation: 
On 2019-07-01, user 1 purchased using both desktop and mobile, user 2 purchased using mobile only and user 3 purchased using desktop only.
On 2019-07-02, user 2 purchased using mobile only, user 3 purchased using desktop only and no one purchased using both platforms.





-- Step 1: Define platform categories for each spending date
WITH Platform_Categories AS (
    SELECT DISTINCT spend_date, 'desktop' AS platform FROM Spending
    UNION ALL
    SELECT DISTINCT spend_date, 'mobile' FROM Spending
    UNION ALL
    SELECT DISTINCT spend_date, 'both' FROM Spending
),

-- Step 2: Aggregate user spending per day and determine platform category
User_Spending AS (
    SELECT
        user_id,
        spend_date,
        SUM(amount) AS total_spent,                      -- Total amount spent by user per day
        -- Identify if the user used only one platform or both
        IF(COUNT(platform) = 1, platform, 'both') AS platform 
    FROM Spending
    GROUP BY user_id, spend_date
)

-- Step 3: Join platform categories with user spending data
SELECT
    pc.spend_date,                                                   -- Date of spending
    pc.platform AS platform_category,                                -- Platform category (desktop, mobile, both)
    COALESCE(SUM(us.total_spent), 0) AS total_amount_spent,          -- Total amount spent per platform per day
    COUNT(us.user_id) AS total_users                                 -- Count of users per platform per day
FROM Platform_Categories AS pc
LEFT JOIN User_Spending AS us 
    ON pc.spend_date = us.spend_date 
    AND pc.platform = us.platform_category                  -- Match by date and platform category
GROUP BY pc.spend_date, pc.platform                         -- Aggregate by date and platform category
ORDER BY pc.spend_date, pc.platform;                        -- Sort results for readability
