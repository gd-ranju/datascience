
Input: 
Product table:
+------------+--------------+
| product_id | product_name |
+------------+--------------+
| 1          | LC Phone     |
| 2          | LC T-Shirt   |
| 3          | LC Keychain  |
+------------+--------------+
Sales table:
+------------+--------------+-------------+---------------------+
| product_id | period_start | period_end  | average_daily_sales |
+------------+--------------+-------------+---------------------+
| 1          | 2019-01-25   | 2019-02-28  | 100                 |
| 2          | 2018-12-01   | 2020-01-01  | 10                  |
| 3          | 2019-12-01   | 2020-01-31  | 1                   |
+------------+--------------+-------------+---------------------+
Output: 
+------------+--------------+-------------+--------------+
| product_id | product_name | report_year | total_amount |
+------------+--------------+-------------+--------------+
| 1          | LC Phone     |    2019     | 3500         |
| 2          | LC T-Shirt   |    2018     | 310          |
| 2          | LC T-Shirt   |    2019     | 3650         |
| 2          | LC T-Shirt   |    2020     | 10           |
| 3          | LC Keychain  |    2019     | 31           |
| 3          | LC Keychain  |    2020     | 31           |
+------------+--------------+-------------+--------------+
Explanation: 
LC Phone was sold for the period of 2019-01-25 to 2019-02-28, and there are 35 days for this period. Total amount 35*100 = 3500. 
LC T-shirt was sold for the period of 2018-12-01 to 2020-01-01, and there are 31, 365, 1 days for years 2018, 2019 and 2020 respectively.
LC Keychain was sold for the period of 2019-12-01 to 2020-01-31, and there are 31, 31 days for years 2019 and 2020 respectively.



WITH SalesCalendar AS (  -- CTE to define the yearly calendar range for sales calculations
    SELECT '2018' AS year, '2018-01-01' AS start, '2018-12-31' AS end
    UNION ALL
    SELECT '2019' AS year, '2019-01-01' AS start, '2019-12-31' AS end
    UNION ALL
    SELECT '2020' AS year, '2020-01-01' AS start, '2020-12-31' AS end
)
SELECT
    p.product_id,
    p.product_name,
    sc.year AS report_year,  -- The sales report year
    (
        DATEDIFF(
            LEAST(s.period_end, sc.end),  -- Ensuring the period does not exceed the year's end
            GREATEST(s.period_start, sc.start)  -- Ensuring the period does not start before the year's beginning
        ) + 1
    ) * s.average_daily_sales AS total_amount  -- Total sales amount calculation
FROM Sales s
INNER JOIN SalesCalendar sc
    ON (sc.year BETWEEN YEAR(s.period_start) AND YEAR(s.period_end))  -- Filtering sales data that falls within the calendar year range
INNER JOIN Product p
    USING (product_id)  -- Joining to fetch product names
ORDER BY p.product_id, sc.year;
